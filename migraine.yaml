# 2025-10-08 22:48:35 - Project-level workflow configuration
# 
# This is a project configuration file that can be used with 'migraine run'
# when no workflow name is specified. The file should be named migraine.yml
# or migraine.json and placed in your project root directory.
# 
# This workflow will be automatically upserted to the database when run with 'migraine run'
# without a name, making it available globally thereafter.

name: project-name
description: Project-level workflow configuration

# Pre-checks run before the main workflow steps
# They are used for validation and dependency checks
pre_checks:
  # Verify Node.js and npm are available
  - command: "which npm"
    description: "Verify npm is available"
  # Check if package.json exists
  - command: "test -f package.json"
    description: "Verify package.json exists"
  # Check if git repository is clean
  - command: "git diff --quiet || (echo 'Warning: uncommitted changes' && false)"
    description: "Ensure git repository is clean"

# Steps are the main commands that make up the workflow
steps:
  # Install dependencies
  - command: "npm install"
    description: "Install project dependencies"
  # Build the project
  - command: "npm run build"
    description: "Build the application"
  # Run tests
  - command: "npm run test"
    description: "Run project tests"
  # Run linter
  - command: "npm run lint"
    description: "Lint the code"

# Actions are optional commands that can be run independently
actions:
  deploy:
    command: "npm run deploy"
    description: "Deploy the application to production"
  cleanup:
    command: "rm -rf ./dist ./build"
    description: "Clean up build artifacts"
  setup-dev:
    command: "npm install && npm run setup"
    description: "Set up development environment"

# Configuration for the workflow
config:
  # Variables that can be used in the workflow
  variables:
    environment:
      - "required"  # This variable is required
  # Whether to store variables in the workflow or prompt for them
  store_variables: false

# Whether to use the vault for variable resolution
# When true, variables are resolved from the vault system
# When false, variables are loaded from environment files or prompted
use_vault: true
