# migraine - 2025-10-08 20:48:15
# 
# This is a YAML workflow definition for Migraine.
# 
# Fields:
# - name: The name of the workflow (required)
# - description: A brief description of what this workflow does (optional)
# - pre_checks: Commands to run before executing the main steps (optional)
# - steps: The main commands to execute in the workflow (required)
# - actions: Additional commands that can be run independently (optional)
# - config: Configuration options for the workflow (optional)
# - use_vault: Whether to use the vault for variable resolution (default: false)

name: migraine
description: Project-level configuration workflow

# Pre-checks are commands that run before the main workflow steps.
# They are typically used for validation, checking if required tools are available, etc.
# If any pre-check fails, the workflow execution stops.
pre_checks:
  # - command: "which git"  # Check if git is available
  #   description: "Verify git is installed"
  # - command: "test -d {{project_dir}}"  # Example using variables
  #   description: "Verify project directory exists"

# Steps are the main commands that make up the workflow.
# They will be executed in the order they appear.
steps:
  # Example step
  - command: "echo 'Hello from workflow migraine!'" 
    description: "Example step that prints a message"
  # Add more steps as needed
  # - command: "npm install"
  #   description: "Install dependencies"
  # - command: "npm run build"
  #   description: "Build the project"

# Actions are optional commands that can be run independently of the main workflow.
# They are typically used for cleanup, deployment, or other operations.
actions:
  # Example action
  # cleanup:
  #   command: "rm -rf ./temp"
  #   description: "Clean up temporary files"
  # deploy:
  #   command: "rsync -av ./dist/ user@server:/path/to/deploy/"
  #   description: "Deploy built files to server"

# Configuration options for the workflow
config:
  # Variables that can be used in the workflow
  # These will be prompted for when running the workflow if not provided
  variables:
    # project_name:
    #   - "slugify"  # Apply slugify transformation to the variable value
  # Whether to store variables in the workflow (true) or prompt for them each time (false)
  store_variables: false

# Whether to use the vault for variable resolution
# If true, variables will be resolved from the vault
# If false, variables will be resolved from environment files or prompted
use_vault: false
